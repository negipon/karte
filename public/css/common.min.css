/*!
 * ress.css • v1.2.2
 * MIT License
 * github.com/filipelinhares/ress
 */

/* # =================================================================
   # Global selectors
   # ================================================================= */

html {
	overflow-y: scroll;
	box-sizing: border-box; /* All browsers without overlaying scrollbars */
	-webkit-text-size-adjust: 100%; /* iOS 8+ */
}

*,
::before,
::after { /* Set `background-repeat: no-repeat` to all elements and pseudo elements */
	box-sizing: inherit;
	background-repeat: no-repeat;
}

::before,
::after { /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
	vertical-align: inherit;
	text-decoration: inherit;
}

* { /* Reset `padding` and `margin` of all elements */
	margin: 0;
	padding: 0;
}

/* # =================================================================
   # General elements
   # ================================================================= */

/* Add the correct display in iOS 4-7.*/

audio:not([controls]) {
	display: none;
	height: 0;
}

hr {
	overflow: visible; /* Show the overflow in Edge and IE */
}

/*
* Correct `block` display not defined for any HTML5 element in IE 8/9
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox
* Correct `block` display not defined for `main` in IE 11
*/

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
	display: block;
}

summary {
	display: list-item; /* Add the correct display in all browsers */
}

small {
	font-size: 80%; /* Set font-size to 80% in `small` elements */
}

[hidden],
template {
	display: none; /* Add the correct display in IE */
}

abbr[title] { /* Add a bordered underline effect in all browsers */
	text-decoration: none;
	border-bottom: 1px dotted; /* Remove text decoration in Firefox 40+ */
}

a {
	background-color: transparent; /* Remove the gray background on active links in IE 10 */
	-webkit-text-decoration-skip: objects; /* Remove gaps in links underline in iOS 8+ and Safari 8+ */
}

a:active,
a:hover {
	outline-width: 0; /* Remove the outline when hovering in all browsers */
}

code,
kbd,
pre,
samp {
	font-family: monospace, monospace; /* Specify the font family of code elements */
}

b,
strong {
	font-weight: bolder; /* Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+ */
}

dfn {
	font-style: italic; /* Address styling not present in Safari and Chrome */
}

/* Address styling not present in IE 8/9 */

mark {
	color: #000;
	background-color: #ff0;
}

/* https://gist.github.com/unruthless/413930 */

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -.25em;
}

sup {
	top: -.5em;
}

/* # =================================================================
   # Forms
   # ================================================================= */

input {
	border-radius: 0;
}

/* Apply cursor pointer to button elements */

button,
[type='button'],
[type='reset'],
[type='submit'],
[role='button'] {
	cursor: pointer;
}

/* Replace pointer cursor in disabled elements */

[disabled] {
	cursor: default;
}

[type='number'] {
	width: auto; /* Firefox 36+ */
}

[type='search'] {
	-webkit-appearance: textfield; /* Safari 8+ */
}

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
	-webkit-appearance: none; /* Safari 8 */
}

textarea {
	overflow: auto; /* Internet Explorer 11+ */
	resize: vertical; /* Specify textarea resizability */
}

button,
input,
optgroup,
select,
textarea {
	font: inherit; /* Specify font inheritance of form elements */
}

optgroup {
	font-weight: bold; /* Restore the font weight unset by the previous rule. */
}

button {
	overflow: visible; /* Address `overflow` set to `hidden` in IE 8/9/10/11 */
}

/* Remove inner padding and border in Firefox 4+ */

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
	padding: 0;
	border-style: 0;
}

/* Replace focus style removed in the border reset above */

button:-moz-focusring,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
	outline: 1px dotted ButtonText;
}

button,
html [type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button; /* Correct the inability to style clickable types in iOS */
}

button,
select {
	text-transform: none; /* Firefox 40+, Internet Explorer 11- */
}

/* Remove the default button styling in all browsers */

button,
input,
select,
textarea {
	color: inherit;
	border-style: none;
	background-color: transparent;
}

/* Style select like a standard input */

select {
	-moz-appearance: none; /* Firefox 36+ */
	-webkit-appearance: none; /* Chrome 41+ */
}

select::-ms-expand {
	display: none; /* Internet Explorer 11+ */
}

select::-ms-value {
	color: currentColor; /* Internet Explorer 11+ */
}

legend { /* Correct the color inheritance from `fieldset` elements in IE */
	display: table; /* Correct the text wrapping in Edge and IE */
	max-width: 100%; /* Correct the text wrapping in Edge and IE */
	white-space: normal; /* Correct `color` not being inherited in IE 8/9/10/11 */
	color: inherit;
	border: 0; /* Correct the text wrapping in Edge and IE */
}

::-webkit-file-upload-button { /* Correct the inability to style clickable types in iOS and Safari */
	font: inherit;
	-webkit-appearance: button; /* Change font properties to `inherit` in Chrome and Safari */
}

[type='search'] { /* Correct the odd appearance in Chrome and Safari */
	outline-offset: -2px;
	-webkit-appearance: textfield; /* Correct the outline style in Safari */
}

/* # =================================================================
   # Specify media element style
   # ================================================================= */

img {
	border-style: none; /* Remove border when inside `a` element in IE 8/9/10 */
}

/* Add the correct vertical alignment in Chrome, Firefox, and Opera */

progress {
	vertical-align: baseline;
}

svg:not(:root) {
	overflow: hidden; /* Internet Explorer 11- */
}

audio,
canvas,
progress,
video {
	display: inline-block; /* Internet Explorer 11+, Windows Phone 8.1+ */
}

/* # =================================================================
   # Accessibility
   # ================================================================= */

/* Hide content from screens but not screenreaders */

/* Specify the progress cursor of updating elements */

[aria-busy='true'] {
	cursor: progress;
}

/* Specify the pointer cursor of trigger elements */

[aria-controls] {
	cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */

[aria-disabled] {
	cursor: default;
}

/* # =================================================================
   # Selection
   # ================================================================= */

/* Specify text selection background color and omit drop shadow */

::-moz-selection { /* Required when declaring ::selection */
	color: #000;
	background-color: #b3d4fc;
	text-shadow: none;
}

::selection { /* Required when declaring ::selection */
	color: #000;
	background-color: #b3d4fc;
	text-shadow: none;
}

.cf:after {
	display: table;
	clear: both;
	content: '';
}

html {
	height: 100%;
	min-height: 100%;
}

body {
	font-family: 'Varela Round', -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Yu Gothic', YuGothic, 'ヒラギノ角ゴ ProN W3', Hiragino Kaku Gothic ProN, Arial, 'メイリオ', Meiryo, sans-serif;
	height: inherit;
	min-height: inherit;
}

ul,
ol {
	margin: 0;
	padding: 0;
	list-style: none;
}

a,
a:active,
a:visited {
	text-decoration: none;
	color: #ff5252;
	outline: 0;
}

.container {
	max-width: 1000px;
	margin-right: auto;
	margin-left: auto;
}

.l-form--add {
	width: 100%;
}

.l-form--login {
	max-width: 400px;
	margin-right: auto;
	margin-left: auto;
	padding: 10px;
}

.l-form--row {
	display: table;
	width: 100%;
}

.l-form--row + .l-form--row {
	margin-top: 20px;
}

.l-form--row-title,
.l-form--row-input {
	display: table-cell;
	vertical-align: middle;
}

.l-form--row-title {
	line-height: 1.2;
	width: 30%;
	text-align: center;
}

.l-form--row + .l-form--error {
	margin-top: 20px;
}

.l-form--error + .l-form--row {
	margin-top: 20px;
}

.l-header {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 70px;
	padding: 20px;
	background-color: rgba(255, 255, 255, .7);
	box-shadow: 0 2px 2px rgba(0, 0, 0, .2);
}

.l-header--menu {
	display: table-cell;
	vertical-align: middle;
}

.l-header--title,
.l-header--contents {
	display: table-cell;
	vertical-align: middle;
}

.l-header--title {
	text-align: center;
}

.l-header--title,
.l-header--menu,
.l-header--contents {
	width: 33.333%;
}

.l-main {
	height: inherit;
	min-height: inherit;
	padding: 100px 20px 20px;
}

.c-button--add {
	font-size: 20px;
	float: right;
	width: 24px;
	text-align: center;
}

.c-button--add > .fa {
	display: inline-block;
	vertical-align: middle;
}

.c-form--input {
	width: 100%;
	padding: 5px 10px;
	border: solid 1px #ccc;
	background-color: #fff;
}

.c-form--select {
	padding: 5px 10px;
	border: solid 1px #ccc;
	background-color: #fff;
}

.c-form--submit {
	display: block;
	width: 100%;
	padding: 10px;
	color: #fff;
	background-color: #ff5252;
}

.c-form--error {
	text-align: center;
	color: red;
}

.c-header {
	display: table;
	width: 100%;
}

.c-header--contents {
	text-align: right;
}

.c-header--menu-link {
	font-size: 24px;
	display: inline-block;
	cursor: pointer;
	color: #ff5252;
}

.c-header--heading-primary {
	display: inline-block;
	vertical-align: middle;
}

.c-header--heading-primary {
	font-size: 24px;
}

.c-header--heading-primary + .c-header--heading-secondary {
	margin-left: 20px;
}

.c-header--display-name {
	display: inline-block;
}

.c-header--logout {
	display: inline-block;
}

.c-heading--wrap + * {
	margin-top: 20px;
}

.c-heading--primary {
	font-size: 20px;
	font-weight: normal;
	position: relative;
	overflow: hidden;
	padding-left: 10px;
}

.c-heading--primary:before {
	position: absolute;
	top: 2px;
	bottom: 2px;
	left: 0;
	width: 4px;
	content: '';
	border-radius: 2px;
	background-color: #ff5252;
}

.c-heading--primary + * {
	margin-top: 20px;
}

.c-main {
	background-color: #f9f9f9;
}

.c-slide--trigger {
	display: none;
}

.c-slide--trigger:checked + .c-slide--menu {
	visibility: visible;
	transition-delay: 0s;
	-webkit-transform: translateX(0);
	transform: translateX(0);
}

.c-slide--trigger:checked ~ .c-slide--overlay {
	z-index: 2;
	visibility: visible;
	transition-delay: 0s;
	opacity: 1;
}

.c-slide--menu {
	position: absolute;
	z-index: 10;
	top: 0;
	bottom: 0;
	visibility: hidden;
	padding: 20px;
	transition: visibility 0s linear .3s, -webkit-transform .3s ease-in-out;
	transition: transform .3s ease-in-out, visibility 0s linear .3s;
	transition: transform .3s ease-in-out, visibility 0s linear .3s, -webkit-transform .3s ease-in-out;
	-webkit-transform: translateX(-100%);
	transform: translateX(-100%);
	background-color: #fff;
}

.c-slide--menu-list li + li {
	margin-top: 20px;
}

.c-slide--overlay {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	visibility: hidden;
	transition: opacity .3s ease-in-out, visibility 0s linear .3s;
	opacity: 0;
	background-color: rgba(0, 0, 0, .5);
}

.c-table--user {
	width: 100%;
	border-collapse: collapse;
	border-bottom: solid 1px #e0e0e0;
	background-color: #fff;
}

.c-table--user thead tr {
	color: #fff;
	background-color: #666;
}

.c-table--user tbody tr:nth-child(2n) {
	background-color: #f0f0f0;
}

.c-table--user th,
.c-table--user td {
	padding: 10px;
	text-align: left;
}

@media screen {

[hidden~='screen'] {
	display: inherit;
}

[hidden~='screen']:not(:active):not(:focus):not(:target) {
	position: absolute !important;
	clip: rect(0 0 0 0) !important;
}

}


/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5jc3MiLCJmb3VuZGF0aW9uL19yZXNldC5zY3NzIiwiZm91bmRhdGlvbi9fYmFzZS5zY3NzIiwibGF5b3V0L19mb3JtLnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwibGF5b3V0L19tYWluLnNjc3MiLCJvYmplY3QvY29tcG9uZW50L19idXR0b24uc2NzcyIsIm9iamVjdC9jb21wb25lbnQvX2Zvcm0uc2NzcyIsIm9iamVjdC9jb21wb25lbnQvX2hlYWRlci5zY3NzIiwib2JqZWN0L2NvbXBvbmVudC9faGVhZGluZy5zY3NzIiwib2JqZWN0L2NvbXBvbmVudC9fbWFpbi5zY3NzIiwib2JqZWN0L2NvbXBvbmVudC9fc2xpZGUuc2NzcyIsIm9iamVjdC9jb21wb25lbnQvX3RhYmxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCOzs7O0dBSUc7QUFFSDs7eUVBRXlFO0FBRXpFO0VBQ0UsdUJBQXNCO0VBQ3RCLG1CQUFrQjtFQUFHLGdEQUFnRDtFQUNyRSwrQkFBOEI7RUFBRyxZQUFZLEVBQzlDOztBQUVEOzs7RUFHRSw2QkFBNEI7RUFBRyw0RUFBNEU7RUFDM0csb0JBQW1CLEVBQ3BCOztBQUVEOztFQUVFLHlCQUF3QjtFQUFHLHdGQUF3RjtFQUNuSCx3QkFBdUIsRUFDeEI7O0FBRUQ7RUFDRSxXQUFVO0VBQUcsa0RBQWtEO0VBQy9ELFVBQVMsRUFDVjs7QUFFRDs7eUVBRXlFO0FBRXpFLHdDQUF3QztBQUN4QztFQUNFLGNBQWE7RUFDYixVQUFTLEVBQ1Y7O0FBRUQ7RUFDRSxrQkFBaUI7RUFBRyxzQ0FBc0MsRUFDM0Q7O0FBRUQ7Ozs7O0VBS0U7QUFDRjs7Ozs7Ozs7Ozs7O0VBWUUsZUFBYyxFQUNmOztBQUVEO0VBQ0UsbUJBQWtCO0VBQUcsNkNBQTZDLEVBQ25FOztBQUVEO0VBQ0UsZUFBYztFQUFHLDhDQUE4QyxFQUNoRTs7QURERDs7RUNLRSxjQUFhO0VBQUcsbUNBQW1DLEVBQ3BEOztBQUVEO0VB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QUNwQjtFQVBIO0lBU0csV0FBVTtJQUNWLG9CQUFtQjtJQUNuQixXQUFVO0lBQ1YscUJBQW9CLEVBQ3BCOztBQUdIO0VBQ0MsbUJBQWtCO0VBQ2xCLHVCQUFzQjtFQUN0QixjQUFhO0VBQ2IsWUFBVztFQUNYLE9BQU07RUFDTixVQUFTO0VBQ1QsbUJBQWtCO0VBQ2xCLHdFQUErRDtFQUEvRCxnRUFBK0Q7RUFBL0QsbUdBQStEO0VBQy9ELHFDQUE0QjtVQUE1Qiw2QkFBNEIsRUFNNUI7RUFMQTtJQUVFLGlCQUFnQixFQUNoQjs7QUFHSDtFQUNDLGdCQUFlO0VBQ2YsbUJBQWtCO0VBQ2xCLDhEQUE2RDtFQUM3RCxxQ0FBaUM7RUFDakMsT0FBTTtFQUNOLFFBQU87RUFDUCxTQUFRO0VBQ1IsVUFBUztFQUNULFdBQVUsRUFDVjs7QUMxQ0Q7RUFDQyx1QkFBc0I7RUFDdEIsWUFBVztFQUNYLDBCQUF5QjtFQUN6QixpQ0FBZ0MsRUFnQmhDO0VBcEJEO0lBT0csdUJBQXNCO0lBQ3RCLFlBQVcsRUFDWDtFQVRIO0lBYUcsMEJBQXlCLEVBQ3pCO0VBZEg7SUFpQkUsY0FBYTtJQUNiLGlCQUFnQixFQUNoQiIsImZpbGUiOiJjb21tb24ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qIVxuICogcmVzcy5jc3Mg4oCiIHYxLjIuMlxuICogTUlUIExpY2Vuc2VcbiAqIGdpdGh1Yi5jb20vZmlsaXBlbGluaGFyZXMvcmVzc1xuICovXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEdsb2JhbCBzZWxlY3RvcnNcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC8qIEFsbCBicm93c2VycyB3aXRob3V0IG92ZXJsYXlpbmcgc2Nyb2xsYmFycyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIGlPUyA4KyAqLyB9XG5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAvKiBTZXQgYGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXRgIHRvIGFsbCBlbGVtZW50cyBhbmQgcHNldWRvIGVsZW1lbnRzICovXG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuOjpiZWZvcmUsXG46OmFmdGVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xuICAvKiBJbmhlcml0IHRleHQtZGVjb3JhdGlvbiBhbmQgdmVydGljYWwgYWxpZ24gdG8gOjpiZWZvcmUgYW5kIDo6YWZ0ZXIgcHNldWRvIGVsZW1lbnRzICovXG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyB9XG5cbioge1xuICBwYWRkaW5nOiAwO1xuICAvKiBSZXNldCBgcGFkZGluZ2AgYW5kIGBtYXJnaW5gIG9mIGFsbCBlbGVtZW50cyAqL1xuICBtYXJnaW46IDA7IH1cblxuLyogIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIyBHZW5lcmFsIGVsZW1lbnRzXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LiovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuaHIge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUgKi8gfVxuXG4vKlxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85XG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4qIGFuZCBGaXJlZm94XG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTFcbiovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xuICAvKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMgKi8gfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xuICAvKiBTZXQgZm9udC1zaXplIHRvIDgwJSBpbiBgc21hbGxgIGVsZW1lbnRzICovIH1cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIC8qIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFICovIH1cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xuICAvKiBBZGQgYSBib3JkZXJlZCB1bmRlcmxpbmUgZWZmZWN0IGluIGFsbCBicm93c2VycyAqL1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIC8qIFJlbW92ZSB0ZXh0IGRlY29yYXRpb24gaW4gRmlyZWZveCA0MCsgKi8gfVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMCAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsgKi8gfVxuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xuICAvKiBSZW1vdmUgdGhlIG91dGxpbmUgd2hlbiBob3ZlcmluZyBpbiBhbGwgYnJvd3NlcnMgKi8gfVxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogU3BlY2lmeSB0aGUgZm9udCBmYW1pbHkgb2YgY29kZSBlbGVtZW50cyAqLyB9XG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICAvKiBDb3JyZWN0IHN0eWxlIHNldCB0byBgYm9sZGAgaW4gRWRnZSAxMissIFNhZmFyaSA2LjIrLCBhbmQgQ2hyb21lIDE4KyAqLyB9XG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgLyogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lICovIH1cblxuLyogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOSAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3VucnV0aGxlc3MvNDEzOTMwICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEZvcm1zXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5pbnB1dCB7XG4gIGJvcmRlci1yYWRpdXM6IDA7IH1cblxuLyogQXBwbHkgY3Vyc29yIHBvaW50ZXIgdG8gYnV0dG9uIGVsZW1lbnRzICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSxcbltyb2xlPVwiYnV0dG9uXCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi8qIFJlcGxhY2UgcG9pbnRlciBjdXJzb3IgaW4gZGlzYWJsZWQgZWxlbWVudHMgKi9cbltkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuW3R5cGU9XCJudW1iZXJcIl0ge1xuICB3aWR0aDogYXV0bztcbiAgLyogRmlyZWZveCAzNisgKi8gfVxuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiBTYWZhcmkgOCsgKi8gfVxuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAvKiBTYWZhcmkgOCAqLyB9XG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIC8qIEludGVybmV0IEV4cGxvcmVyIDExKyAqL1xuICByZXNpemU6IHZlcnRpY2FsO1xuICAvKiBTcGVjaWZ5IHRleHRhcmVhIHJlc2l6YWJpbGl0eSAqLyB9XG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIFNwZWNpZnkgZm9udCBpbmhlcml0YW5jZSBvZiBmb3JtIGVsZW1lbnRzICovIH1cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgLyogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuICovIH1cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExICovIH1cblxuLyogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKiBSZXBsYWNlIGZvY3VzIHN0eWxlIHJlbW92ZWQgaW4gdGhlIGJvcmRlciByZXNldCBhYm92ZSAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyAqLyB9XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAvKiBGaXJlZm94IDQwKywgSW50ZXJuZXQgRXhwbG9yZXIgMTEtICovIH1cblxuLyogUmVtb3ZlIHRoZSBkZWZhdWx0IGJ1dHRvbiBzdHlsaW5nIGluIGFsbCBicm93c2VycyAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbi8qIFN0eWxlIHNlbGVjdCBsaWtlIGEgc3RhbmRhcmQgaW5wdXQgKi9cbnNlbGVjdCB7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLyogRmlyZWZveCAzNisgKi9cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAvKiBDaHJvbWUgNDErICovIH1cblxuc2VsZWN0OjotbXMtZXhwYW5kIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTErICovIH1cblxuc2VsZWN0OjotbXMtdmFsdWUge1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMSsgKi8gfVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRSAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFICovIH1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIENocm9tZSBhbmQgU2FmYXJpICovIH1cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpICovIH1cblxuLyogIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIyBTcGVjaWZ5IG1lZGlhIGVsZW1lbnQgc3R5bGVcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgLyogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAgKi8gfVxuXG4vKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC8qIEludGVybmV0IEV4cGxvcmVyIDExLSAqLyB9XG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTErLCBXaW5kb3dzIFBob25lIDguMSsgKi8gfVxuXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEFjY2Vzc2liaWxpdHlcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIEhpZGUgY29udGVudCBmcm9tIHNjcmVlbnMgYnV0IG5vdCBzY3JlZW5yZWFkZXJzICovXG5AbWVkaWEgc2NyZWVuIHtcbiAgW2hpZGRlbn49XCJzY3JlZW5cIl0ge1xuICAgIGRpc3BsYXk6IGluaGVyaXQ7IH1cbiAgW2hpZGRlbn49XCJzY3JlZW5cIl06bm90KDphY3RpdmUpOm5vdCg6Zm9jdXMpOm5vdCg6dGFyZ2V0KSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gICAgY2xpcDogcmVjdCgwIDAgMCAwKSAhaW1wb3J0YW50OyB9IH1cblxuLyogU3BlY2lmeSB0aGUgcHJvZ3Jlc3MgY3Vyc29yIG9mIHVwZGF0aW5nIGVsZW1lbnRzICovXG5bYXJpYS1idXN5PVwidHJ1ZVwiXSB7XG4gIGN1cnNvcjogcHJvZ3Jlc3M7IH1cblxuLyogU3BlY2lmeSB0aGUgcG9pbnRlciBjdXJzb3Igb2YgdHJpZ2dlciBlbGVtZW50cyAqL1xuW2FyaWEtY29udHJvbHNdIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi8qIFNwZWNpZnkgdGhlIHVuc3R5bGVkIGN1cnNvciBvZiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2UgaW5vcGVyYWJsZSBlbGVtZW50cyAqL1xuW2FyaWEtZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICMgU2VsZWN0aW9uXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiBTcGVjaWZ5IHRleHQgc2VsZWN0aW9uIGJhY2tncm91bmQgY29sb3IgYW5kIG9taXQgZHJvcCBzaGFkb3cgKi9cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNkNGZjO1xuICAvKiBSZXF1aXJlZCB3aGVuIGRlY2xhcmluZyA6OnNlbGVjdGlvbiAqL1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNkNGZjO1xuICAvKiBSZXF1aXJlZCB3aGVuIGRlY2xhcmluZyA6OnNlbGVjdGlvbiAqL1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuLmNmOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG5odG1sIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlOyB9XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJ1ZhcmVsYSBSb3VuZCcsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ0hlbHZldGljYSBOZXVlJywgJ1l1IEdvdGhpYycsIFl1R290aGljLCAn44OS44Op44Ku44OO6KeS44K0IFByb04gVzMnLCBIaXJhZ2lubyBLYWt1IEdvdGhpYyBQcm9OLCBBcmlhbCwgJ+ODoeOCpOODquOCqicsIE1laXJ5bywgc2Fucy1zZXJpZjtcbiAgaGVpZ2h0OiBpbmhlcml0O1xuICBtaW4taGVpZ2h0OiBpbmhlcml0OyB9XG5cbnVsLCBvbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5hLCBhOmFjdGl2ZSwgYTp2aXNpdGVkIHtcbiAgY29sb3I6ICNmZjUyNTI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgb3V0bGluZTogMDsgfVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cblxuLmwtZm9ybS0tYWRkIHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLmwtZm9ybS0tbG9naW4ge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBwYWRkaW5nOiAxMHB4OyB9XG5cbi5sLWZvcm0tLXJvdyB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTsgfVxuICAubC1mb3JtLS1yb3cgKyAubC1mb3JtLS1yb3cge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7IH1cbiAgLmwtZm9ybS0tcm93LXRpdGxlLCAubC1mb3JtLS1yb3ctaW5wdXQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAubC1mb3JtLS1yb3ctdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIHdpZHRoOiAzMCU7IH1cbiAgLmwtZm9ybS0tcm93ICsgLmwtZm9ybS0tZXJyb3Ige1xuICAgIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLmwtZm9ybS0tZXJyb3IgKyAubC1mb3JtLS1yb3cge1xuICBtYXJnaW4tdG9wOiAyMHB4OyB9XG5cbi5sLWhlYWRlciB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiA3MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cbiAgLmwtaGVhZGVyLS1tZW51IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLmwtaGVhZGVyLS10aXRsZSwgLmwtaGVhZGVyLS1jb250ZW50cyB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5sLWhlYWRlci0tdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubC1oZWFkZXItLXRpdGxlLCAubC1oZWFkZXItLW1lbnUsIC5sLWhlYWRlci0tY29udGVudHMge1xuICAgIHdpZHRoOiAzMy4zMzMlOyB9XG5cbi5sLW1haW4ge1xuICBwYWRkaW5nOiAxMDBweCAyMHB4IDIwcHg7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgbWluLWhlaWdodDogaW5oZXJpdDsgfVxuXG4uYy1idXR0b24tLWFkZCB7XG4gIGZsb2F0OiByaWdodDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICB3aWR0aDogMjRweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jLWJ1dHRvbi0tYWRkID4gLmZhIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4uYy1mb3JtLS1pbnB1dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogc29saWQgMXB4ICNDQ0M7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICB3aWR0aDogMTAwJTsgfVxuXG4uYy1mb3JtLS1zZWxlY3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IHNvbGlkIDFweCAjQ0NDO1xuICBwYWRkaW5nOiA1cHggMTBweDsgfVxuXG4uYy1mb3JtLS1zdWJtaXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1MjUyO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jLWZvcm0tLWVycm9yIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogcmVkOyB9XG5cbi5jLWhlYWRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTsgfVxuICAuYy1oZWFkZXItLWNvbnRlbnRzIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAuYy1oZWFkZXItLW1lbnUtbGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBjb2xvcjogI2ZmNTI1MjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLmMtaGVhZGVyLS1oZWFkaW5nLXByaW1hcnkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5jLWhlYWRlci0taGVhZGluZy1wcmltYXJ5IHtcbiAgICBmb250LXNpemU6IDI0cHg7IH1cbiAgICAuYy1oZWFkZXItLWhlYWRpbmctcHJpbWFyeSArIC5jLWhlYWRlci0taGVhZGluZy1zZWNvbmRhcnkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7IH1cbiAgLmMtaGVhZGVyLS1kaXNwbGF5LW5hbWUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAuYy1oZWFkZXItLWxvZ291dCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi5jLWhlYWRpbmctLXdyYXAgKyAqIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4uYy1oZWFkaW5nLS1wcmltYXJ5IHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuYy1oZWFkaW5nLS1wcmltYXJ5OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAycHg7XG4gICAgYm90dG9tOiAycHg7XG4gICAgd2lkdGg6IDRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1MjUyO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDsgfVxuICAuYy1oZWFkaW5nLS1wcmltYXJ5ICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4uYy1tYWluIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsgfVxuXG4uYy1zbGlkZS0tdHJpZ2dlciB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmMtc2xpZGUtLXRyaWdnZXI6Y2hlY2tlZCArIC5jLXNsaWRlLS1tZW51IHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAwczsgfVxuICAuYy1zbGlkZS0tdHJpZ2dlcjpjaGVja2VkIH4gLmMtc2xpZGUtLW92ZXJsYXkge1xuICAgIHotaW5kZXg6IDI7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zaXRpb24tZGVsYXk6IDBzOyB9XG5cbi5jLXNsaWRlLS1tZW51IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAyMHB4O1xuICB6LWluZGV4OiAxMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLWluLW91dCwgdmlzaWJpbGl0eSAwcyBsaW5lYXIgLjNzO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyB9XG4gIC5jLXNsaWRlLS1tZW51LWxpc3QgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4uYy1zbGlkZS0tb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlLWluLW91dCwgdmlzaWJpbGl0eSAwcyBsaW5lYXIgLjNzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgb3BhY2l0eTogMDsgfVxuXG4uYy10YWJsZS0tdXNlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2UwZTBlMDsgfVxuICAuYy10YWJsZS0tdXNlciB0aGVhZCB0ciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuYy10YWJsZS0tdXNlciB0Ym9keSB0cjpudGgtY2hpbGQoMm4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOyB9XG4gIC5jLXRhYmxlLS11c2VyIHRoLCAuYy10YWJsZS0tdXNlciB0ZCB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4iLCIvKiFcbiAqIHJlc3MuY3NzIOKAoiB2MS4yLjJcbiAqIE1JVCBMaWNlbnNlXG4gKiBnaXRodWIuY29tL2ZpbGlwZWxpbmhhcmVzL3Jlc3NcbiAqL1xuXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEdsb2JhbCBzZWxlY3RvcnNcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDsgLyogQWxsIGJyb3dzZXJzIHdpdGhvdXQgb3ZlcmxheWluZyBzY3JvbGxiYXJzICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogaU9TIDgrICovXG59XG5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyAvKiBTZXQgYGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXRgIHRvIGFsbCBlbGVtZW50cyBhbmQgcHNldWRvIGVsZW1lbnRzICovXG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbjo6YmVmb3JlLFxuOjphZnRlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDsgLyogSW5oZXJpdCB0ZXh0LWRlY29yYXRpb24gYW5kIHZlcnRpY2FsIGFsaWduIHRvIDo6YmVmb3JlIGFuZCA6OmFmdGVyIHBzZXVkbyBlbGVtZW50cyAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdDtcbn1cblxuKiB7XG4gIHBhZGRpbmc6IDA7IC8qIFJlc2V0IGBwYWRkaW5nYCBhbmQgYG1hcmdpbmAgb2YgYWxsIGVsZW1lbnRzICovXG4gIG1hcmdpbjogMDtcbn1cblxuLyogIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIyBHZW5lcmFsIGVsZW1lbnRzXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuaHIge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUgKi9cbn1cblxuLypcbiogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOVxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuKiBhbmQgRmlyZWZveFxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExXG4qL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IC8qIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2VycyAqL1xufVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyAvKiBTZXQgZm9udC1zaXplIHRvIDgwJSBpbiBgc21hbGxgIGVsZW1lbnRzICovXG59XG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyAvKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAqL1xufVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IC8qIEFkZCBhIGJvcmRlcmVkIHVuZGVybGluZSBlZmZlY3QgaW4gYWxsIGJyb3dzZXJzICovXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgLyogUmVtb3ZlIHRleHQgZGVjb3JhdGlvbiBpbiBGaXJlZm94IDQwKyAqL1xufVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMCAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsgKi9cbn1cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgLyogUmVtb3ZlIHRoZSBvdXRsaW5lIHdoZW4gaG92ZXJpbmcgaW4gYWxsIGJyb3dzZXJzICovXG59XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiBTcGVjaWZ5IHRoZSBmb250IGZhbWlseSBvZiBjb2RlIGVsZW1lbnRzICovXG59XG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyAvKiBDb3JyZWN0IHN0eWxlIHNldCB0byBgYm9sZGAgaW4gRWRnZSAxMissIFNhZmFyaSA2LjIrLCBhbmQgQ2hyb21lIDE4KyAqL1xufVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IC8qIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZSAqL1xufVxuXG4vKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85ICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3VucnV0aGxlc3MvNDEzOTMwICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEZvcm1zXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmlucHV0IHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbn1cblxuLyogQXBwbHkgY3Vyc29yIHBvaW50ZXIgdG8gYnV0dG9uIGVsZW1lbnRzICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSxcbltyb2xlPVwiYnV0dG9uXCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKiBSZXBsYWNlIHBvaW50ZXIgY3Vyc29yIGluIGRpc2FibGVkIGVsZW1lbnRzICovXG5bZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG5bdHlwZT1cIm51bWJlclwiXSB7XG4gIHdpZHRoOiBhdXRvOyAvKiBGaXJlZm94IDM2KyAqL1xufVxuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiBTYWZhcmkgOCsgKi9cbn1cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgLyogU2FmYXJpIDggKi9cbn1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTErICovXG4gIHJlc2l6ZTogdmVydGljYWw7IC8qIFNwZWNpZnkgdGV4dGFyZWEgcmVzaXphYmlsaXR5ICovXG59XG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIFNwZWNpZnkgZm9udCBpbmhlcml0YW5jZSBvZiBmb3JtIGVsZW1lbnRzICovXG59XG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IC8qIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLiAqL1xufVxuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEgKi9cbn1cblxuLyogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogUmVwbGFjZSBmb2N1cyBzdHlsZSByZW1vdmVkIGluIHRoZSBib3JkZXIgcmVzZXQgYWJvdmUgKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2Bjb250cm9scyBpbiBBbmRyb2lkIDQgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyAqL1xufVxuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgLyogRmlyZWZveCA0MCssIEludGVybmV0IEV4cGxvcmVyIDExLSAqL1xufVxuXG4vKiBSZW1vdmUgdGhlIGRlZmF1bHQgYnV0dG9uIHN0eWxpbmcgaW4gYWxsIGJyb3dzZXJzICovXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi8qIFN0eWxlIHNlbGVjdCBsaWtlIGEgc3RhbmRhcmQgaW5wdXQgKi9cbnNlbGVjdCB7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTsgLyogRmlyZWZveCAzNisgKi9cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyAvKiBDaHJvbWUgNDErICovXG59XG5cbnNlbGVjdDo6LW1zLWV4cGFuZCB7XG4gIGRpc3BsYXk6IG5vbmU7IC8qIEludGVybmV0IEV4cGxvcmVyIDExKyAqL1xufVxuXG5zZWxlY3Q6Oi1tcy12YWx1ZSB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7IC8qIEludGVybmV0IEV4cGxvcmVyIDExKyAqL1xufVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRSAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFICovXG59XG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaSAqL1xuICBmb250OiBpbmhlcml0OyAvKiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBDaHJvbWUgYW5kIFNhZmFyaSAqL1xufVxuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkgKi9cbn1cblxuLyogIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIyBTcGVjaWZ5IG1lZGlhIGVsZW1lbnQgc3R5bGVcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMCAqL1xufVxuXG4vKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMS0gKi9cbn1cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMSssIFdpbmRvd3MgUGhvbmUgOC4xKyAqL1xufVxuXG4vKiAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjIEFjY2Vzc2liaWxpdHlcbiAgICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogSGlkZSBjb250ZW50IGZyb20gc2NyZWVucyBidXQgbm90IHNjcmVlbnJlYWRlcnMgKi9cbkBtZWRpYSBzY3JlZW4ge1xuICBbaGlkZGVufj1cInNjcmVlblwiXSB7XG4gICAgZGlzcGxheTogaW5oZXJpdDtcbiAgfVxuICBbaGlkZGVufj1cInNjcmVlblwiXTpub3QoOmFjdGl2ZSk6bm90KDpmb2N1cyk6bm90KDp0YXJnZXQpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgICBjbGlwOiByZWN0KDAgMCAwIDApICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyogU3BlY2lmeSB0aGUgcHJvZ3Jlc3MgY3Vyc29yIG9mIHVwZGF0aW5nIGVsZW1lbnRzICovXG5bYXJpYS1idXN5PVwidHJ1ZVwiXSB7XG4gIGN1cnNvcjogcHJvZ3Jlc3M7XG59XG5cbi8qIFNwZWNpZnkgdGhlIHBvaW50ZXIgY3Vyc29yIG9mIHRyaWdnZXIgZWxlbWVudHMgKi9cblthcmlhLWNvbnRyb2xzXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogU3BlY2lmeSB0aGUgdW5zdHlsZWQgY3Vyc29yIG9mIGRpc2FibGVkLCBub3QtZWRpdGFibGUsIG9yIG90aGVyd2lzZSBpbm9wZXJhYmxlIGVsZW1lbnRzICovXG5bYXJpYS1kaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qICMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICMgU2VsZWN0aW9uXG4gICAjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qIFNwZWNpZnkgdGV4dCBzZWxlY3Rpb24gYmFja2dyb3VuZCBjb2xvciBhbmQgb21pdCBkcm9wIHNoYWRvdyAqL1xuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IzZDRmYzsgLyogUmVxdWlyZWQgd2hlbiBkZWNsYXJpbmcgOjpzZWxlY3Rpb24gKi9cbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7IC8qIFJlcXVpcmVkIHdoZW4gZGVjbGFyaW5nIDo6c2VsZWN0aW9uICovXG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbiIsIi5jZjphZnRlciB7XG5cdGNvbnRlbnQ6ICcnO1xuXHRkaXNwbGF5OiB0YWJsZTtcblx0Y2xlYXI6IGJvdGg7XG59XG5odG1sIHtcblx0aGVpZ2h0OiAxMDAlO1xuXHRtaW4taGVpZ2h0OiAxMDAlO1xufVxuYm9keSB7XG5cdGZvbnQtZmFtaWx5OiAnVmFyZWxhIFJvdW5kJywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnSGVsdmV0aWNhIE5ldWUnLCAnWXUgR290aGljJywgWXVHb3RoaWMsICfjg5Ljg6njgq7jg47op5LjgrQgUHJvTiBXMycsIEhpcmFnaW5vIEtha3UgR290aGljIFByb04sIEFyaWFsLCAn44Oh44Kk44Oq44KqJywgTWVpcnlvLCBzYW5zLXNlcmlmO1xuXHRoZWlnaHQ6IGluaGVyaXQ7XG5cdG1pbi1oZWlnaHQ6IGluaGVyaXQ7XG59XG51bCxvbCB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cbmEsIGE6YWN0aXZlLCBhOnZpc2l0ZWQge1xuXHRjb2xvcjogI2ZmNTI1Mjtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRvdXRsaW5lOiAwO1xufVxuLmNvbnRhaW5lciB7XG5cdG1heC13aWR0aDogMTAwMHB4O1xuXHRtYXJnaW4tbGVmdDogYXV0bztcblx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuIiwiLmwtZm9ybSB7XG5cdCYtLWFkZCB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cblx0Ji0tbG9naW4ge1xuXHRcdG1heC13aWR0aDogNDAwcHg7XG5cdFx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdFx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xuXHRcdHBhZGRpbmc6IDEwcHg7XG5cdH1cblx0Ji0tcm93IHtcblx0XHRkaXNwbGF5OiB0YWJsZTtcblx0XHR3aWR0aDogMTAwJTtcblx0XHQrIC5sLWZvcm0tLXJvdyB7XG5cdFx0XHRtYXJnaW4tdG9wOiAyMHB4O1xuXHRcdH1cblx0XHQmLXRpdGxlLFxuXHRcdCYtaW5wdXQge1xuXHRcdFx0ZGlzcGxheTogdGFibGUtY2VsbDtcblx0XHRcdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdFx0fVxuXHRcdCYtdGl0bGUge1xuXHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0bGluZS1oZWlnaHQ6IDEuMjtcblx0XHRcdHdpZHRoOiAzMCU7XG5cdFx0fVxuXHRcdCsgLmwtZm9ybS0tZXJyb3Ige1xuXHRcdFx0bWFyZ2luLXRvcDogMjBweDtcblx0XHR9XG5cdH1cblx0Ji0tc3VibWl0IHtcblx0XHQmLXdyYXAge1xuXHRcdH1cblx0fVxuXHQmLS1lcnJvciB7XG5cdFx0KyAubC1mb3JtLS1yb3cge1xuXHRcdFx0bWFyZ2luLXRvcDogMjBweDtcblx0XHR9XG5cdH1cbn1cbiIsIi5sLWhlYWRlciB7XG5cdHBhZGRpbmc6IDIwcHg7XG5cdHdpZHRoOiAxMDAlO1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdHRvcDogMDtcblx0bGVmdDogMDtcblx0aGVpZ2h0OiA3MHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNyk7XG5cdGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7XG5cdCYtLW1lbnUge1xuXHRcdGRpc3BsYXk6IHRhYmxlLWNlbGw7XG5cdFx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcblx0fVxuXHQmLS10aXRsZSxcblx0Ji0tY29udGVudHMge1xuXHRcdGRpc3BsYXk6IHRhYmxlLWNlbGw7XG5cdFx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcblx0fVxuXHQmLS10aXRsZSB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR9XG5cdCYtLXRpdGxlLFxuXHQmLS1tZW51LFxuXHQmLS1jb250ZW50cyB7XG5cdFx0d2lkdGg6IDMzLjMzMyU7XG5cdH1cbn1cbiIsIi5sLW1haW4ge1xuXHRwYWRkaW5nOiAxMDBweCAyMHB4IDIwcHg7XG5cdGhlaWdodDogaW5oZXJpdDtcblx0bWluLWhlaWdodDogaW5oZXJpdDtcbn1cbiIsIi5jLWJ1dHRvbiB7XG5cdCYtLWFkZCB7XG5cdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdGZvbnQtc2l6ZTogMjBweDtcblx0XHR3aWR0aDogMjRweDtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0PiAuZmEge1xuXHRcdFx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHR9XG5cdH1cbn1cbiIsIi5jLWZvcm0ge1xuXHQmLS1pbnB1dCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcblx0XHRib3JkZXI6IHNvbGlkIDFweCAjQ0NDO1xuXHRcdHBhZGRpbmc6IDVweCAxMHB4O1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cdCYtLXNlbGVjdCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcblx0XHRib3JkZXI6IHNvbGlkIDFweCAjQ0NDO1xuXHRcdHBhZGRpbmc6IDVweCAxMHB4O1xuXHR9XG5cdCYtLXN1Ym1pdCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmNTI1Mjtcblx0XHRjb2xvcjogI2ZmZjtcblx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cdCYtLWVycm9yIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0Y29sb3I6IHJlZDtcblx0fVxufVxuIiwiLmMtaGVhZGVyIHtcblx0ZGlzcGxheTogdGFibGU7XG5cdHdpZHRoOiAxMDAlO1xuXHQmLS1jb250ZW50cyB7XG5cdFx0dGV4dC1hbGlnbjogcmlnaHQ7XG5cdH1cblx0Ji0tbWVudSB7XG5cdFx0Ji1saW5rIHtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdGZvbnQtc2l6ZTogMjRweDtcblx0XHRcdGNvbG9yOiAjZmY1MjUyO1xuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdH1cblx0fVxuXHQmLS1oZWFkaW5nIHtcblx0XHQmLXByaW1hcnkge1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcblx0XHR9XG5cdFx0Ji1wcmltYXJ5IHtcblx0XHRcdGZvbnQtc2l6ZTogMjRweDtcblx0XHRcdCsgLmMtaGVhZGVyLS1oZWFkaW5nLXNlY29uZGFyeSB7XG5cdFx0XHRcdG1hcmdpbi1sZWZ0OiAyMHB4O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHQmLS1kaXNwbGF5IHtcblx0XHQmLW5hbWUge1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdH1cblx0fVxuXHQmLS1sb2dvdXQge1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0fVxufVxuIiwiLmMtaGVhZGluZyB7XG5cdCYtLXdyYXAge1xuXHRcdCsgKiB7XG5cdFx0XHRtYXJnaW4tdG9wOiAyMHB4O1xuXHRcdH1cblx0fVxuXHQmLS1wcmltYXJ5IHtcblx0XHRmb250LXNpemU6IDIwcHg7XG5cdFx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0cGFkZGluZy1sZWZ0OiAxMHB4O1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0JjpiZWZvcmUge1xuXHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRsZWZ0OiAwO1xuXHRcdFx0dG9wOiAycHg7XG5cdFx0XHRib3R0b206IDJweDtcblx0XHRcdHdpZHRoOiA0cHg7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1MjUyO1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRcdH1cblx0XHQrICoge1xuXHRcdFx0bWFyZ2luLXRvcDogMjBweDtcblx0XHR9XG5cdH1cbn1cbiIsIi5jLW1haW4ge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xufVxuIiwiLmMtc2xpZGUge1xuXHQmLS10cmlnZ2VyIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHRcdCY6Y2hlY2tlZCB7XG5cdFx0XHQrIC5jLXNsaWRlLS1tZW51IHtcblx0XHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuXHRcdFx0XHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRcdFx0XHR0cmFuc2l0aW9uLWRlbGF5OiAwcztcblx0XHRcdH1cblx0XHRcdH4gLmMtc2xpZGUtLW92ZXJsYXkge1xuXHRcdFx0XHR6LWluZGV4OiAyO1xuXHRcdFx0XHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRcdFx0XHRvcGFjaXR5OiAxO1xuXHRcdFx0XHR0cmFuc2l0aW9uLWRlbGF5OiAwcztcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Ji0tbWVudSB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cdFx0cGFkZGluZzogMjBweDtcblx0XHR6LWluZGV4OiAxMDtcblx0XHR0b3A6IDA7XG5cdFx0Ym90dG9tOiAwO1xuXHRcdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0LCB2aXNpYmlsaXR5IDBzIGxpbmVhciAuM3M7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcblx0XHQmLWxpc3Qge1xuXHRcdFx0bGkgKyBsaSB7XG5cdFx0XHRcdG1hcmdpbi10b3A6IDIwcHg7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdCYtLW92ZXJsYXkge1xuXHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0dHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbi1vdXQsIHZpc2liaWxpdHkgMHMgbGluZWFyIC4zcztcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNSk7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDA7XG5cdFx0cmlnaHQ6IDA7XG5cdFx0Ym90dG9tOiAwO1xuXHRcdG9wYWNpdHk6IDA7XG5cdH1cbn1cbiIsIi5jLXRhYmxlIHtcblx0Ji0tdXNlciB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXHRcdGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAjZTBlMGUwO1xuXHRcdHRoZWFkIHtcblx0XHRcdHRyIHtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogIzY2Njtcblx0XHRcdFx0Y29sb3I6ICNmZmY7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHRib2R5IHtcblx0XHRcdHRyOm50aC1jaGlsZCgybikge1xuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR0aCx0ZCB7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHR9XG5cdH1cbn1cbiJdfQ== */
